{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEAD,EAAAE,OAAOC,KAAK,CACVC,SAAS,IAGX,IAAMC,EAAaC,SAASC,cAAc,qBACpCC,EAAYF,SAASC,cAAc,oBACnCE,EAAcH,SAASC,cAAc,sBACrCG,EAAOJ,SAASC,cAAc,SAEhCI,EAAa,EACbC,EAAY,EACZC,EAAS,EAiCb,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAS,SAACC,EAASC,GAC5BC,YAAY,WACNN,EACFI,EAAS,CAACN,WAAUC,UAEpBM,EAAQ,CAACP,WAAUC,YAEpBA,MAxCPN,EAAKc,iBAAiB,UAiBtB,SAAqBC,GACnBA,EAAEC,iBAEF,IAAK,IAAIC,EAAI,EAAGA,GAAKd,EAAQc,GAAK,EAChCb,EAAea,EAAIhB,EAAaC,GAAWe,EAAE,IAC5CC,MAAK,SAAAC,G,IAAGd,EAAQc,EAARd,SAAUC,EAAKa,EAALb,MACjBhB,EAAAE,OAAO4B,QAAQ,uBAAwCC,OAAfhB,EAAS,QAAYgB,OAANf,EAAM,UAE9DgB,OAAM,SAAAH,G,IAAGd,EAAQc,EAARd,SAAUC,EAAKa,EAALb,MAClBhB,EAAAE,OAAO+B,QAAQ,sBAAqCF,OAAfhB,EAAS,QAAYgB,OAANf,EAAM,aAzBhEX,EAAWmB,iBAAiB,UAI5B,SAAmBC,GACjBd,EAAauB,OAAOT,EAAEU,cAAcC,UAJtC5B,EAAUgB,iBAAiB,UAO3B,SAAkBC,GAChBb,EAAYsB,OAAOT,EAAEU,cAAcC,UAPrC3B,EAAYe,iBAAiB,UAU7B,SAAoBC,GAClBZ,EAASqB,OAAOT,EAAEU,cAAcC,U","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nNotify.init({\n  useIcon: false,\n  });\n\nconst delayInput = document.querySelector(\"input[name=delay]\")\nconst stepInput = document.querySelector(\"input[name=step]\")\nconst amountInput = document.querySelector(\"input[name=amount]\")\nconst form = document.querySelector(\".form\")\n\nlet firstDelay = 0\nlet delayStep = 0\nlet amount = 0\n\nform.addEventListener(\"submit\", submitForm)\ndelayInput.addEventListener(\"change\", setDelay)\nstepInput.addEventListener(\"change\", setStep)\namountInput.addEventListener(\"change\", setAmount)\n\nfunction setDelay (e) {\n  firstDelay = Number(e.currentTarget.value)\n}\n\nfunction setStep (e) {\n  delayStep = Number(e.currentTarget.value)\n}\n\nfunction setAmount (e) {\n  amount = Number(e.currentTarget.value)\n}\n\nfunction submitForm (e) {\n  e.preventDefault()\n\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise (i, (firstDelay + delayStep*(i-1)))\n    .then(({ position, delay }) => {\n      Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`)\n    })\n    .catch(({ position, delay }) => {\n      Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`)\n    });\n  } \n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise ((resolve, reject) => {\n    setTimeout (() => {\n      if (shouldResolve) {\n        resolve ({position, delay})\n      } else {\n        reject ({position, delay})\n      }\n    }, delay)\n  })\n}"],"names":["$h6c0i","parcelRequire","Notify","init","useIcon","$ce04d3a99e08e73b$var$delayInput","document","querySelector","$ce04d3a99e08e73b$var$stepInput","$ce04d3a99e08e73b$var$amountInput","$ce04d3a99e08e73b$var$form","$ce04d3a99e08e73b$var$firstDelay","$ce04d3a99e08e73b$var$delayStep","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","e","preventDefault","i","then","param","success","concat","catch","failure","Number","currentTarget","value"],"version":3,"file":"03-promises.73d203ac.js.map"}